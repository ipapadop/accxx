/** @file */
/*
 * Copyright (c) 2019 Yiannis Papadopoulos
 *
 * Distributed under the terms of the MIT License.
 *
 * (See accompanying file LICENSE or copy at http://opensource.org/licenses/MIT)
 */

#include "accxx/cl/cl_error_code.hpp"

namespace accxx {

#define ACCXX_CASE(x) \
  case x:             \
    return #x;

const char* cl_error_code_name(int code) noexcept
{
  switch (code)
  {
    ACCXX_CASE(CL_SUCCESS)
    ACCXX_CASE(CL_DEVICE_NOT_FOUND)
    ACCXX_CASE(CL_DEVICE_NOT_AVAILABLE)
    ACCXX_CASE(CL_COMPILER_NOT_AVAILABLE)
    ACCXX_CASE(CL_MEM_OBJECT_ALLOCATION_FAILURE)
    ACCXX_CASE(CL_OUT_OF_RESOURCES)
    ACCXX_CASE(CL_OUT_OF_HOST_MEMORY)
    ACCXX_CASE(CL_PROFILING_INFO_NOT_AVAILABLE)
    ACCXX_CASE(CL_MEM_COPY_OVERLAP)
    ACCXX_CASE(CL_IMAGE_FORMAT_MISMATCH)
    ACCXX_CASE(CL_IMAGE_FORMAT_NOT_SUPPORTED)
    ACCXX_CASE(CL_BUILD_PROGRAM_FAILURE)
    ACCXX_CASE(CL_MAP_FAILURE)
#ifdef CL_VERSION_1_1
    ACCXX_CASE(CL_MISALIGNED_SUB_BUFFER_OFFSET)
    ACCXX_CASE(CL_EXEC_STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)
#endif
#ifdef CL_VERSION_1_2
    ACCXX_CASE(CL_COMPILE_PROGRAM_FAILURE)
    ACCXX_CASE(CL_LINKER_NOT_AVAILABLE)
    ACCXX_CASE(CL_LINK_PROGRAM_FAILURE)
    ACCXX_CASE(CL_DEVICE_PARTITION_FAILED)
    ACCXX_CASE(CL_KERNEL_ARG_INFO_NOT_AVAILABLE)
#endif
    ACCXX_CASE(CL_INVALID_VALUE)
    ACCXX_CASE(CL_INVALID_DEVICE_TYPE)
    ACCXX_CASE(CL_INVALID_PLATFORM)
    ACCXX_CASE(CL_INVALID_DEVICE)
    ACCXX_CASE(CL_INVALID_CONTEXT)
    ACCXX_CASE(CL_INVALID_QUEUE_PROPERTIES)
    ACCXX_CASE(CL_INVALID_COMMAND_QUEUE)
    ACCXX_CASE(CL_INVALID_HOST_PTR)
    ACCXX_CASE(CL_INVALID_MEM_OBJECT)
    ACCXX_CASE(CL_INVALID_IMAGE_FORMAT_DESCRIPTOR)
    ACCXX_CASE(CL_INVALID_IMAGE_SIZE)
    ACCXX_CASE(CL_INVALID_SAMPLER)
    ACCXX_CASE(CL_INVALID_BINARY)
    ACCXX_CASE(CL_INVALID_BUILD_OPTIONS)
    ACCXX_CASE(CL_INVALID_PROGRAM)
    ACCXX_CASE(CL_INVALID_PROGRAM_EXECUTABLE)
    ACCXX_CASE(CL_INVALID_KERNEL_NAME)
    ACCXX_CASE(CL_INVALID_KERNEL_DEFINITION)
    ACCXX_CASE(CL_INVALID_KERNEL)
    ACCXX_CASE(CL_INVALID_ARG_INDEX)
    ACCXX_CASE(CL_INVALID_ARG_VALUE)
    ACCXX_CASE(CL_INVALID_ARG_SIZE)
    ACCXX_CASE(CL_INVALID_KERNEL_ARGS)
    ACCXX_CASE(CL_INVALID_WORK_DIMENSION)
    ACCXX_CASE(CL_INVALID_WORK_GROUP_SIZE)
    ACCXX_CASE(CL_INVALID_WORK_ITEM_SIZE)
    ACCXX_CASE(CL_INVALID_GLOBAL_OFFSET)
    ACCXX_CASE(CL_INVALID_EVENT_WAIT_LIST)
    ACCXX_CASE(CL_INVALID_EVENT)
    ACCXX_CASE(CL_INVALID_OPERATION)
    ACCXX_CASE(CL_INVALID_GL_OBJECT)
    ACCXX_CASE(CL_INVALID_BUFFER_SIZE)
    ACCXX_CASE(CL_INVALID_MIP_LEVEL)
    ACCXX_CASE(CL_INVALID_GLOBAL_WORK_SIZE)
#ifdef CL_VERSION_1_1
    ACCXX_CASE(CL_INVALID_PROPERTY)
#endif
#ifdef CL_VERSION_1_2
    ACCXX_CASE(CL_INVALID_IMAGE_DESCRIPTOR)
    ACCXX_CASE(CL_INVALID_COMPILER_OPTIONS)
    ACCXX_CASE(CL_INVALID_LINKER_OPTIONS)
    ACCXX_CASE(CL_INVALID_DEVICE_PARTITION_COUNT)
#endif
#ifdef CL_VERSION_2_0
    ACCXX_CASE(CL_INVALID_PIPE_SIZE)
    ACCXX_CASE(CL_INVALID_DEVICE_QUEUE)
#endif
#ifdef CL_VERSION_2_2
    ACCXX_CASE(CL_INVALID_SPEC_ID)
    ACCXX_CASE(CL_MAX_SIZE_RESTRICTION_EXCEEDED)
#endif
    default:
      return "CL_UNKNOWN_ERROR";
  }
}

#undef ACCXX_CASE

} // namespace accxx
